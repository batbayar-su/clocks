angular.module("clocks").factory("dbSrvc",function(e,o){return{loadProjects:function(){var r=o.defer();return e({url:"server/index.php/projects/load",method:"GET"}).success(function(e){r.resolve(e)}).error(function(e){console.log(e),r.reject()}),r.promise},insertProject:function(r){var n=o.defer();return e({url:"server/index.php/projects/insert",method:"POST",data:r}).success(function(e){n.resolve(e)}).error(function(e){console.log(e),n.reject(e)}),n.promise},getProject:function(r){var n=o.defer();return e({url:"server/index.php/projects/retrieve/"+r,method:"GET"}).success(function(e){console.log(e),n.resolve(e)}).error(function(e){console.log(e),n.reject(e)}),n.promise},updateProject:function(o,r){e({url:"server/index.php/projects/update",method:"POST",data:{id:o,seconds:r}}).success(function(e){console.log(e),console.log("project saved")}).error(function(e){console.log(e)})},convertToSeconds:function(e,o,r){return 3600*e+60*o+r},revertFromSeconds:function(e){var o=Math.floor(e/3600),r=Math.floor((e-3600*o)/60),n=e-3600*o-60*r;return{hours:o,minutes:r,seconds:n}},processInputs:function(e,o,r,n,t){var c=this.convertToSeconds(o,r,0),s=this.convertToSeconds(n,t,0);return c=0==c||isNaN(c)?null:c,s=isNaN(s)?0:s,e=0==e?null:e,{hourly_rate:e,time_budgeted:c,time_spent:s}}}});